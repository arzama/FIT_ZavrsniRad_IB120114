//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PEPmodnaKompanija_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PEPBazaEntities1 : DbContext
    {
        public PEPBazaEntities1()
            : base("name=PEPBazaEntities1")
        {
            Configuration.ProxyCreationEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Izlazi> Izlazi { get; set; }
        public virtual DbSet<IzlazStavke> IzlazStavke { get; set; }
        public virtual DbSet<Korisnici> Korisnici { get; set; }
        public virtual DbSet<Kupci> Kupci { get; set; }
        public virtual DbSet<LookBook> LookBook { get; set; }
        public virtual DbSet<Modeli> Modeli { get; set; }
        public virtual DbSet<NarudzbaStavke> NarudzbaStavke { get; set; }
        public virtual DbSet<Narudzbe> Narudzbe { get; set; }
        public virtual DbSet<Ocjene> Ocjene { get; set; }
        public virtual DbSet<Proizvodi> Proizvodi { get; set; }
        public virtual DbSet<Revije> Revije { get; set; }
        public virtual DbSet<Sezone> Sezone { get; set; }
        public virtual DbSet<Skladista> Skladista { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Uloge> Uloge { get; set; }
        public virtual DbSet<VrsteProizvoda> VrsteProizvoda { get; set; }
        public virtual DbSet<ModelLookBook> ModelLookBook { get; set; }
        public virtual DbSet<Katalog> Katalog { get; set; }
        public virtual DbSet<KatalogProizvod> KatalogProizvod { get; set; }
        public virtual DbSet<FavouiriteProizvod> FavouiriteProizvod { get; set; }
        public virtual DbSet<Favourite> Favourite { get; set; }
        public virtual DbSet<SkladisteProizvodi> SkladisteProizvodi { get; set; }
        public virtual DbSet<OcjeneDizajnera> OcjeneDizajnera { get; set; }
        public virtual DbSet<Velicine> Velicine { get; set; }
        public virtual DbSet<AdresaDostave> AdresaDostave { get; set; }
        public virtual DbSet<NacinDostave> NacinDostave { get; set; }
        public virtual DbSet<NacinPlacanja> NacinPlacanja { get; set; }
        public virtual DbSet<ModeliProizvodi> ModeliProizvodi { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<usp_AllRevije_Result> usp_AllRevije()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AllRevije_Result>("usp_AllRevije");
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_Korisnici_Insert(string ime, string prezime, string email, string telefon, string korisnickoIme, string lozinkaSalt, string lozinkaHash, Nullable<bool> status, Nullable<int> ulogaID)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var ulogaIDParameter = ulogaID.HasValue ?
                new ObjectParameter("UlogaID", ulogaID) :
                new ObjectParameter("UlogaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_Korisnici_Insert", imeParameter, prezimeParameter, emailParameter, telefonParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter, statusParameter, ulogaIDParameter);
        }
    
        public virtual ObjectResult<Korisnici> usp_Korisnici_SelectByImePrezime(string imePrezime)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("usp_Korisnici_SelectByImePrezime", imePrezimeParameter);
        }
    
        public virtual ObjectResult<Korisnici> usp_Korisnici_SelectByImePrezime(string imePrezime, MergeOption mergeOption)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Korisnici>("usp_Korisnici_SelectByImePrezime", mergeOption, imePrezimeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_LastModelID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_LastModelID");
        }
    
        public virtual ObjectResult<Modeli> usp_Modeli()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Modeli>("usp_Modeli");
        }
    
        public virtual ObjectResult<Modeli> usp_Modeli(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Modeli>("usp_Modeli", mergeOption);
        }
    
        public virtual int usp_Proizvodi_Insert(string naziv, string sifra, Nullable<decimal> cijena, Nullable<int> vrstaID, byte[] slika, byte[] slikaThumb, Nullable<bool> status, Nullable<int> sezonaID, Nullable<int> korisnikID, Nullable<int> velicinaID)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var sifraParameter = sifra != null ?
                new ObjectParameter("Sifra", sifra) :
                new ObjectParameter("Sifra", typeof(string));
    
            var cijenaParameter = cijena.HasValue ?
                new ObjectParameter("Cijena", cijena) :
                new ObjectParameter("Cijena", typeof(decimal));
    
            var vrstaIDParameter = vrstaID.HasValue ?
                new ObjectParameter("VrstaID", vrstaID) :
                new ObjectParameter("VrstaID", typeof(int));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var sezonaIDParameter = sezonaID.HasValue ?
                new ObjectParameter("SezonaID", sezonaID) :
                new ObjectParameter("SezonaID", typeof(int));
    
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var velicinaIDParameter = velicinaID.HasValue ?
                new ObjectParameter("VelicinaID", velicinaID) :
                new ObjectParameter("VelicinaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Proizvodi_Insert", nazivParameter, sifraParameter, cijenaParameter, vrstaIDParameter, slikaParameter, slikaThumbParameter, statusParameter, sezonaIDParameter, korisnikIDParameter, velicinaIDParameter);
        }
    
        public virtual ObjectResult<usp_ProizvodiByModel_Result> usp_ProizvodiByModel(Nullable<int> modelID)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProizvodiByModel_Result>("usp_ProizvodiByModel", modelIDParameter);
        }
    
        public virtual ObjectResult<RevijeByKorisnik> usp_RevijeByKorisnik(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RevijeByKorisnik>("usp_RevijeByKorisnik", korisnikIDParameter);
        }
    
        public virtual ObjectResult<usp_RevijeByKorisnikLook_Result> usp_RevijeByKorisnikLook(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RevijeByKorisnikLook_Result>("usp_RevijeByKorisnikLook", korisnikIDParameter);
        }
    
        public virtual int usp_ModelLookBook_Insert(Nullable<int> lookBookID, Nullable<int> modelID)
        {
            var lookBookIDParameter = lookBookID.HasValue ?
                new ObjectParameter("LookBookID", lookBookID) :
                new ObjectParameter("LookBookID", typeof(int));
    
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ModelLookBook_Insert", lookBookIDParameter, modelIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_LookBook_Insert(string naziv, Nullable<int> korisnikID)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_LookBook_Insert", nazivParameter, korisnikIDParameter);
        }
    
        public virtual ObjectResult<usp_ModeliByLookBook_Result> usp_ModeliByLookBook(Nullable<int> lookBookID)
        {
            var lookBookIDParameter = lookBookID.HasValue ?
                new ObjectParameter("LookBookID", lookBookID) :
                new ObjectParameter("LookBookID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ModeliByLookBook_Result>("usp_ModeliByLookBook", lookBookIDParameter);
        }
    
        public virtual ObjectResult<usp_PretragaProizvoda__Result> usp_PretragaProizvoda_(Nullable<int> vrstaID, Nullable<int> sezonaID, string nazivProizvoda)
        {
            var vrstaIDParameter = vrstaID.HasValue ?
                new ObjectParameter("VrstaID", vrstaID) :
                new ObjectParameter("VrstaID", typeof(int));
    
            var sezonaIDParameter = sezonaID.HasValue ?
                new ObjectParameter("SezonaID", sezonaID) :
                new ObjectParameter("SezonaID", typeof(int));
    
            var nazivProizvodaParameter = nazivProizvoda != null ?
                new ObjectParameter("NazivProizvoda", nazivProizvoda) :
                new ObjectParameter("NazivProizvoda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PretragaProizvoda__Result>("usp_PretragaProizvoda_", vrstaIDParameter, sezonaIDParameter, nazivProizvodaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_Katalog_Insert(string naziv, Nullable<int> korisnikID)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_Katalog_Insert", nazivParameter, korisnikIDParameter);
        }
    
        public virtual ObjectResult<uspProizvodiBySezonaRevija_Result> uspProizvodiBySezonaRevija(Nullable<int> sezonaID)
        {
            var sezonaIDParameter = sezonaID.HasValue ?
                new ObjectParameter("SezonaID", sezonaID) :
                new ObjectParameter("SezonaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspProizvodiBySezonaRevija_Result>("uspProizvodiBySezonaRevija", sezonaIDParameter);
        }
    
        public virtual int usp_KatalogProizvod_Insert(Nullable<int> katalogID, Nullable<int> proizvodID)
        {
            var katalogIDParameter = katalogID.HasValue ?
                new ObjectParameter("KatalogID", katalogID) :
                new ObjectParameter("KatalogID", typeof(int));
    
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_KatalogProizvod_Insert", katalogIDParameter, proizvodIDParameter);
        }
    
        public virtual ObjectResult<usp_KatalogByVrsta_Result> usp_KatalogByVrsta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_KatalogByVrsta_Result>("usp_KatalogByVrsta");
        }
    
        public virtual ObjectResult<usp_ProizvodiByKatalog_Result> usp_ProizvodiByKatalog(Nullable<int> katalogID)
        {
            var katalogIDParameter = katalogID.HasValue ?
                new ObjectParameter("KatalogID", katalogID) :
                new ObjectParameter("KatalogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProizvodiByKatalog_Result>("usp_ProizvodiByKatalog", katalogIDParameter);
        }
    
        public virtual ObjectResult<usp_RevijeByDatum_Result> usp_RevijeByDatum(Nullable<System.DateTime> datumPocetak, Nullable<System.DateTime> datumKraj)
        {
            var datumPocetakParameter = datumPocetak.HasValue ?
                new ObjectParameter("DatumPocetak", datumPocetak) :
                new ObjectParameter("DatumPocetak", typeof(System.DateTime));
    
            var datumKrajParameter = datumKraj.HasValue ?
                new ObjectParameter("DatumKraj", datumKraj) :
                new ObjectParameter("DatumKraj", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RevijeByDatum_Result>("usp_RevijeByDatum", datumPocetakParameter, datumKrajParameter);
        }
    
        public virtual ObjectResult<usp_AllModeli_Result> usp_AllModeli()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AllModeli_Result>("usp_AllModeli");
        }
    
        public virtual ObjectResult<usp_Proizvodi_SelectById_Result> usp_Proizvodi_SelectById(Nullable<int> proizvodID)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Proizvodi_SelectById_Result>("usp_Proizvodi_SelectById", proizvodIDParameter);
        }
    
        public virtual ObjectResult<usp_ModeliByLookbookPhone_Result> usp_ModeliByLookbookPhone()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ModeliByLookbookPhone_Result>("usp_ModeliByLookbookPhone");
        }
    
        public virtual ObjectResult<usp_Modeli_SelectByIdPhone_Result> usp_Modeli_SelectByIdPhone(Nullable<int> modelID)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Modeli_SelectByIdPhone_Result>("usp_Modeli_SelectByIdPhone", modelIDParameter);
        }
    
        public virtual ObjectResult<usp_ProizvodiByModelPhone_Result> usp_ProizvodiByModelPhone(Nullable<int> modelID)
        {
            var modelIDParameter = modelID.HasValue ?
                new ObjectParameter("ModelID", modelID) :
                new ObjectParameter("ModelID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ProizvodiByModelPhone_Result>("usp_ProizvodiByModelPhone", modelIDParameter);
        }
    
        public virtual int usp_NarudzbaStavke_Insert(Nullable<int> narudzbaID, Nullable<int> proizvodID, Nullable<int> kolicina)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var kolicinaParameter = kolicina.HasValue ?
                new ObjectParameter("Kolicina", kolicina) :
                new ObjectParameter("Kolicina", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_NarudzbaStavke_Insert", narudzbaIDParameter, proizvodIDParameter, kolicinaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_Narudzbe_Insert(string brojNarudzbe, Nullable<int> kupacID, Nullable<System.DateTime> datum, Nullable<int> adresaDostaveID, Nullable<int> nacinDostaveID, Nullable<int> nacinPlacanjaID)
        {
            var brojNarudzbeParameter = brojNarudzbe != null ?
                new ObjectParameter("BrojNarudzbe", brojNarudzbe) :
                new ObjectParameter("BrojNarudzbe", typeof(string));
    
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var datumParameter = datum.HasValue ?
                new ObjectParameter("Datum", datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            var adresaDostaveIDParameter = adresaDostaveID.HasValue ?
                new ObjectParameter("AdresaDostaveID", adresaDostaveID) :
                new ObjectParameter("AdresaDostaveID", typeof(int));
    
            var nacinDostaveIDParameter = nacinDostaveID.HasValue ?
                new ObjectParameter("NacinDostaveID", nacinDostaveID) :
                new ObjectParameter("NacinDostaveID", typeof(int));
    
            var nacinPlacanjaIDParameter = nacinPlacanjaID.HasValue ?
                new ObjectParameter("NacinPlacanjaID", nacinPlacanjaID) :
                new ObjectParameter("NacinPlacanjaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_Narudzbe_Insert", brojNarudzbeParameter, kupacIDParameter, datumParameter, adresaDostaveIDParameter, nacinDostaveIDParameter, nacinPlacanjaIDParameter);
        }
    
        public virtual int usp_FavouriteProizvod_Insert(Nullable<int> favouriteID, Nullable<int> proizvodID)
        {
            var favouriteIDParameter = favouriteID.HasValue ?
                new ObjectParameter("FavouriteID", favouriteID) :
                new ObjectParameter("FavouriteID", typeof(int));
    
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_FavouriteProizvod_Insert", favouriteIDParameter, proizvodIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_FavouriteInsert(Nullable<int> kupacID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_FavouriteInsert", kupacIDParameter);
        }
    
        public virtual ObjectResult<usp_Narudzbe_SelectAktivne_Result> usp_Narudzbe_SelectAktivne()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Narudzbe_SelectAktivne_Result>("usp_Narudzbe_SelectAktivne");
        }
    
        public virtual ObjectResult<usp_NarudzbeStavke_SelectByNarudzbaID_Result> usp_NarudzbeStavke_SelectByNarudzbaID(Nullable<int> narudzbaID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NarudzbeStavke_SelectByNarudzbaID_Result>("usp_NarudzbeStavke_SelectByNarudzbaID", narudzbaIDParameter);
        }
    
        public virtual ObjectResult<usp_Select_ProizvodiBySkladiste_Result> usp_Select_ProizvodiBySkladiste(Nullable<int> skladisteID)
        {
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Select_ProizvodiBySkladiste_Result>("usp_Select_ProizvodiBySkladiste", skladisteIDParameter);
        }
    
        public virtual ObjectResult<usp_Select_StavkeSkladista_Result> usp_Select_StavkeSkladista(Nullable<int> skladisteProizvodiID)
        {
            var skladisteProizvodiIDParameter = skladisteProizvodiID.HasValue ?
                new ObjectParameter("SkladisteProizvodiID", skladisteProizvodiID) :
                new ObjectParameter("SkladisteProizvodiID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Select_StavkeSkladista_Result>("usp_Select_StavkeSkladista", skladisteProizvodiIDParameter);
        }
    
        public virtual int usp_Izlazi_InsertByNarudzbaID(Nullable<int> narudzbaID, Nullable<int> skladisteID, Nullable<int> korisnikID)
        {
            var narudzbaIDParameter = narudzbaID.HasValue ?
                new ObjectParameter("NarudzbaID", narudzbaID) :
                new ObjectParameter("NarudzbaID", typeof(int));
    
            var skladisteIDParameter = skladisteID.HasValue ?
                new ObjectParameter("SkladisteID", skladisteID) :
                new ObjectParameter("SkladisteID", typeof(int));
    
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Izlazi_InsertByNarudzbaID", narudzbaIDParameter, skladisteIDParameter, korisnikIDParameter);
        }
    
        public virtual ObjectResult<usp_Select_Narudzbe_Result> usp_Select_Narudzbe(Nullable<int> kupacID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Select_Narudzbe_Result>("usp_Select_Narudzbe", kupacIDParameter);
        }
    
        public virtual ObjectResult<usp_Select_NajprodavanijiProizvodi_Result> usp_Select_NajprodavanijiProizvodi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Select_NajprodavanijiProizvodi_Result>("usp_Select_NajprodavanijiProizvodi");
        }
    
        public virtual int usp_Ocjena_Proizvoda(Nullable<int> proizvodID, Nullable<int> kupacID, Nullable<int> ocjena)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var ocjenaParameter = ocjena.HasValue ?
                new ObjectParameter("Ocjena", ocjena) :
                new ObjectParameter("Ocjena", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Ocjena_Proizvoda", proizvodIDParameter, kupacIDParameter, ocjenaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> usp_ProsjecnaOcjena(Nullable<int> proizvodID)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("usp_ProsjecnaOcjena", proizvodIDParameter);
        }
    
        public virtual int usp_OcjenaDizajnera_Insert(Nullable<int> korisnikID, Nullable<int> kupacID, Nullable<int> ocjena)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            var ocjenaParameter = ocjena.HasValue ?
                new ObjectParameter("Ocjena", ocjena) :
                new ObjectParameter("Ocjena", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OcjenaDizajnera_Insert", korisnikIDParameter, kupacIDParameter, ocjenaParameter);
        }
    
        public virtual ObjectResult<usp_najboljeOcijenjeniDizajneri_Result> usp_najboljeOcijenjeniDizajneri()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_najboljeOcijenjeniDizajneri_Result>("usp_najboljeOcijenjeniDizajneri");
        }
    
        public virtual ObjectResult<usp_najboljeOcijenjeniProizvodi_Result> usp_najboljeOcijenjeniProizvodi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_najboljeOcijenjeniProizvodi_Result>("usp_najboljeOcijenjeniProizvodi");
        }
    
        public virtual ObjectResult<usp_NajprodavanijiByMjesec_Result> usp_NajprodavanijiByMjesec(Nullable<System.DateTime> datum)
        {
            var datumParameter = datum.HasValue ?
                new ObjectParameter("Datum", datum) :
                new ObjectParameter("Datum", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_NajprodavanijiByMjesec_Result>("usp_NajprodavanijiByMjesec", datumParameter);
        }
    
        public virtual ObjectResult<usp_SelectNarudzbeDesk_Result> usp_SelectNarudzbeDesk()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectNarudzbeDesk_Result>("usp_SelectNarudzbeDesk");
        }
    
        public virtual ObjectResult<usp_Select_NajboljeOcijenjeniDizajner_Result> usp_Select_NajboljeOcijenjeniDizajner()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Select_NajboljeOcijenjeniDizajner_Result>("usp_Select_NajboljeOcijenjeniDizajner");
        }
    
        public virtual ObjectResult<usp_UserBased_Preporuka_Result> usp_UserBased_Preporuka(Nullable<int> proizvodID, Nullable<int> kupacID)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserBased_Preporuka_Result>("usp_UserBased_Preporuka", proizvodIDParameter, kupacIDParameter);
        }
    
        public virtual ObjectResult<usp_UserBased2_Result> usp_UserBased2(Nullable<int> kupacID)
        {
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UserBased2_Result>("usp_UserBased2", kupacIDParameter);
        }
    
        public virtual ObjectResult<usp_ModeliByDizajnerID_Result> usp_ModeliByDizajnerID(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ModeliByDizajnerID_Result>("usp_ModeliByDizajnerID", korisnikIDParameter);
        }
    
        public virtual ObjectResult<usp_StatistikaDizajner_Result> usp_StatistikaDizajner(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StatistikaDizajner_Result>("usp_StatistikaDizajner", korisnikIDParameter);
        }
    
        public virtual ObjectResult<Velicine> usp_DostupneVelicine(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Velicine>("usp_DostupneVelicine", nazivParameter);
        }
    
        public virtual ObjectResult<Velicine> usp_DostupneVelicine(string naziv, MergeOption mergeOption)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Velicine>("usp_DostupneVelicine", mergeOption, nazivParameter);
        }
    
        public virtual ObjectResult<FavouiriteProizvod> usp_ProizvodUFavourite(Nullable<int> proizvodID, Nullable<int> kupacID)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FavouiriteProizvod>("usp_ProizvodUFavourite", proizvodIDParameter, kupacIDParameter);
        }
    
        public virtual ObjectResult<FavouiriteProizvod> usp_ProizvodUFavourite(Nullable<int> proizvodID, Nullable<int> kupacID, MergeOption mergeOption)
        {
            var proizvodIDParameter = proizvodID.HasValue ?
                new ObjectParameter("ProizvodID", proizvodID) :
                new ObjectParameter("ProizvodID", typeof(int));
    
            var kupacIDParameter = kupacID.HasValue ?
                new ObjectParameter("KupacID", kupacID) :
                new ObjectParameter("KupacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FavouiriteProizvod>("usp_ProizvodUFavourite", mergeOption, proizvodIDParameter, kupacIDParameter);
        }
    
        public virtual ObjectResult<Proizvodi> usp_ProizvodiIzFavourite(Nullable<int> favouriteID)
        {
            var favouriteIDParameter = favouriteID.HasValue ?
                new ObjectParameter("FavouriteID", favouriteID) :
                new ObjectParameter("FavouriteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proizvodi>("usp_ProizvodiIzFavourite", favouriteIDParameter);
        }
    
        public virtual ObjectResult<Proizvodi> usp_ProizvodiIzFavourite(Nullable<int> favouriteID, MergeOption mergeOption)
        {
            var favouriteIDParameter = favouriteID.HasValue ?
                new ObjectParameter("FavouriteID", favouriteID) :
                new ObjectParameter("FavouriteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Proizvodi>("usp_ProizvodiIzFavourite", mergeOption, favouriteIDParameter);
        }
    
        public virtual ObjectResult<usp_KatalogSelect_Result> usp_KatalogSelect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_KatalogSelect_Result>("usp_KatalogSelect");
        }
    
        public virtual ObjectResult<usp_StatistikaZarada_Result> usp_StatistikaZarada()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StatistikaZarada_Result>("usp_StatistikaZarada");
        }
    
        public virtual ObjectResult<usp_KolicinaProdanihByVrsta_Result> usp_KolicinaProdanihByVrsta()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_KolicinaProdanihByVrsta_Result>("usp_KolicinaProdanihByVrsta");
        }
    }
}
